buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'

jar {
    baseName = 'bookstore'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
}

group = 'com.leadingagile'
version = '1.0.0'

description = """World's Smallest Bookstore"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
repositories {
     maven { url "https://repo.spring.io/libs-release" }
     maven { url "http://repo.maven.apache.org/maven2" }
}
sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/it/java')
        }
        resources.srcDir file('src/it/resources')
    }
    apiTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/cukes/java')
        }
        resources.srcDir file('src/cukes/resources')
    }
}
configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    apiTestCompile.extendsFrom testCompile
    apiTestRuntime.extendsFrom testRuntime
}
dependencies {
    compile(
            'com.google.guava:guava:24.0-jre',
            'com.google.code.gson:gson:2.8.2',
            'org.apache.commons:commons-lang3:3.0',
            'org.springframework.boot:spring-boot-starter-data-jpa:1.5.4.RELEASE',
            'org.springframework.boot:spring-boot-starter-web:1.5.4.RELEASE'
    )
    runtime(
            'org.springframework.boot:spring-boot-devtools:1.5.4.RELEASE',
            'mysql:mysql-connector-java:5.1.42'
    )
    testCompile(
            'org.springframework.boot:spring-boot-starter-test:1.5.4.RELEASE',
            'org.junit.jupiter:junit-jupiter-api:5.1.0-RC1',
            'org.junit.jupiter:junit-jupiter-engine:5.1.0-RC1',
            'org.junit.platform:junit-platform-runner:1.0.3',
            'org.junit.platform:junit-platform-launcher:1.0.3',
            'org.hamcrest:hamcrest-all:1.3',
            'info.cukes:cucumber-java8:1.2.5',
            'info.cukes:cucumber-junit:1.2.5',
            'info.cukes:cucumber-spring:1.2.5',
            'com.mashape.unirest:unirest-java:1.4.9'
    )
    task integrationTest(type: Test) {
        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        outputs.upToDateWhen { false }
    }
    task apiTest(type: Test) {
        testClassesDirs = sourceSets.apiTest.output.classesDirs
        classpath = sourceSets.apiTest.runtimeClasspath
        outputs.upToDateWhen { false }
    }
    check.dependsOn integrationTest
    integrationTest.mustRunAfter test
    tasks.withType(Test) {
        reports.html.destination = file("${reporting.baseDir}/${name}")
    }
}
